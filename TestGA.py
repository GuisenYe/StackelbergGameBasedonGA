from sko.GA import GA as GA
import TestGurobiAsFunction as gr
import Duizhao as grdz
import MainSub as MS

GridPurchaseElectricityPrice=[33.6235225062280,	33.6252631578947,	33.6267424284392,	33.6298854056237,	33.6292962658663,	33.6309291534817,\
                              33.0057703811642,	30.0121361344848,	28.5591123742267,	28.0567876912348,	27.8739854102029	,\
                              28.1255367362137,	28.0930606129644,	28.3539922744831,	28.6594014866229,	29.0072135923690,\
                              29.2798967462581,	29.6944708510210,	31.0580428320367,	33.0700890435427,	33.6211487782331	,33.6251091015650,	33.6261984048342,\
                              33.6294036499322]

CAPrice=[62.61,59.88,57.30,57.06,58.03,58.50,56.43,46.27,38.83,37.87,39.76,44.20,49.80,52.04,55.21,57.54,59.84,77.51,84.83,88,88.97,81.52,70.30,62.15]

CAPrice=[i*1 for i in CAPrice]

def demo_function(x):
    x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23=x
    # Pgrid= gr.gurobiFunction(x)
    Pgrid=MS.gurobiFunction(x,GridPurchaseElectricityPrice)
    print("电网购电为")
    print(Pgrid)
    print("适应度为")
    print(1/(x0*Pgrid[0]+x1*Pgrid[1]+x2*Pgrid[2]+x3*Pgrid[3]+x4*Pgrid[4]+x5*Pgrid[5]+x6*Pgrid[6]+x7*Pgrid[7]+x8*Pgrid[8]+\
           x9*Pgrid[9]+x10*Pgrid[10]+x11*Pgrid[11]+x12*Pgrid[12]+x13*Pgrid[13]+x14*Pgrid[14]+x15*Pgrid[15]+\
           x16*Pgrid[16]+x17*Pgrid[17]+x18*Pgrid[18]+x19*Pgrid[19]+x20*Pgrid[20]+x21*Pgrid[21]+x22*Pgrid[22]+\
           x23*Pgrid[23]))
    return 1/(x0*Pgrid[0]+x1*Pgrid[1]+x2*Pgrid[2]+x3*Pgrid[3]+x4*Pgrid[4]+x5*Pgrid[5]+x6*Pgrid[6]+x7*Pgrid[7]+x8*Pgrid[8]+\
           x9*Pgrid[9]+x10*Pgrid[10]+x11*Pgrid[11]+x12*Pgrid[12]+x13*Pgrid[13]+x14*Pgrid[14]+x15*Pgrid[15]+\
           x16*Pgrid[16]+x17*Pgrid[17]+x18*Pgrid[18]+x19*Pgrid[19]+x20*Pgrid[20]+x21*Pgrid[21]+x22*Pgrid[22]+\
           x23*Pgrid[23])
ub=[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
ub=[i for i in ub]
ga=GA(func=demo_function, n_dim=24,size_pop=30,max_iter=20,lb=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],ub=ub)

best_x, best_y=ga.fit()

print("the final result is: ")
print(best_x, 1/best_y)

# gurobi=gr.gurobiFunction([56.05961471, 56.17581574, 56.06661137, 89.63541695, 72.46636206, 43.12699916,
#  50.58438373, 33.89970086, 72.09438064, 25.1304663, 62.1273941,  83.93963807,
#  65.97252168, 97.20378685, 80.37348444, 31.36603686, 83.98808649, 18.75234639,
#  84.99182024, 51.03104808, 83.7448662,  67.06250689, 56.28623493, 76.85936315] )

print("GA结果为")
gr1=MS.gurobiFunction(best_x,GridPurchaseElectricityPrice)

# CAPrice=[22.10,	21.71,	21.22,	20.07,	19.66,	19.25,	19.77,	22.20,	25.41,	26.55,	26.17,	25.59,	25.05,	24.65,	24.8,	25.25,	24.89,	24.31,	22.96,	21.56,	22.13,	22.65,	22.55,	22.37]
# GridPurchaseElectricityPrice=[37.82, 38.14,	37.9,	37.60,	37.10,	36.64,	35.81,	33.48,	31.96,	31.35,	30.85,	30.73,	30.67,	31.08,	31.59,	32.14,	32.64,	33.38,	34.45,	35.81,	36.40,	36.72,	37.01,	37.35]

# a=[20, 18, 17.5, 16, 16, 16.5, 16.5, 16, 15, 11, 10, 8, 8, 12.5, 12.5, 11, 12, 14, 13.5, 26.5, 26, 25,
#                 22.5, 21]
# a=[56.05961471, 56.17581574, 56.06661137, 89.63541695, 72.46636206, 43.12699916,
#  50.58438373, 33.89970086, 72.09438064, 25.1304663, 62.1273941,  83.93963807,
#  65.97252168, 97.20378685, 80.37348444, 31.36603686, 83.98808649, 18.75234639,
#  84.99182024, 51.03104808, 83.7448662,  67.06250689, 56.28623493, 76.85936315]

# b=[105, 79,78,70,74,92,68,40,37,31,33,28,
#    0,35,36,37,44,57,79,97,97,91,81,76]
# b=[35.94,33.37,26.99, 23.51,  24.62 , 31.23 , 55.19 , 81.97 , 50.02 , 62.69 , 27.62 , 23.03 , 24.13 , 22.57 , 23.34 , 23.76 , 23.23 , 20.71 , 7.36 , 14.34 , 33.85,  26.87 , 28.42 ,39.86]

# a=[i for i in a]
print("对照组结果为")
gr2=grdz.gurobiFunction(CAPrice,GridPurchaseElectricityPrice)